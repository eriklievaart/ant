

project.name=${ant.project.name}
compile.java.version=11


# build files
source.ant.master.file=master.xml
source.ant.compile.file=compile.xml
source.ant.tasks.file=tasks.xml
source.ant.macros.file=macros.xml

source.ant.sh.file=template/script.sh
source.ant.bat.file=template/script.bat


# root locations
development.dir=${user.home}/Development
build.root.dir=/tmp/build
backup.dir=${development.dir}/backup
project.dir=${development.dir}/project/${project.name}
buildnumber.dir=${development.dir}/buildnumber
source.root.dir=${development.dir}/git/${project.name}
dependencies.repo.dir=${development.dir}/repo
deploy.local.bin.dir=${user.home}/bin
deploy.local.root.dir=${user.home}/Applications
deploy.local.bat.file=c:/bin/${project.name}.bat
server.dir=${development.dir}/server


# source structure
source.main.dir=${source.root.dir}/main
source.main.java.dir=${source.main.dir}/java
source.main.config.dir=${source.main.dir}/config
source.main.resource.dir=${source.main.dir}/resources
source.main.static.dir=${source.main.dir}/static
source.main.zip.dir=${source.main.static.dir}/zip
source.main.manifest.dir=${source.main.static.dir}/manifest
source.main.run.dir=${source.main.static.dir}/run
source.main.sql.dir=${source.main.static.dir}/sql
source.main.webapp.dir=${source.main.static.dir}/webapp

source.main.javacc.file=${source.main.static.dir}/javacc.jj

source.main.sql.create.file=${source.main.sql.dir}/create.sql
source.main.sql.drop.file=${source.main.sql.dir}/drop.sql

source.test.dir=${source.root.dir}/test
source.test.java.dir=${source.test.dir}/java
source.test.resource.dir=${source.test.dir}/resources
source.test.static.dir=${source.test.dir}/static
source.test.run.dir=${source.test.static.dir}/run

source.cmd.file=${source.main.resource.dir}/run
source.webxml.file=${source.main.resource.dir}/WEB-INF/web.xml
source.manifest.file=${source.main.config.dir}/manifest.txt
source.dependencies.file=${source.main.config.dir}/dependencies.txt
source.ant.properties.file=${source.main.config.dir}/ant.properties


# build structure
build.version.file=${buildnumber.dir}/${project.name}

build.project.dir=${build.root.dir}/${project.name}
build.dist.dir=${build.project.dir}/dist
build.spool.dir=${build.project.dir}/spool
build.zip.dir=${build.spool.dir}/zip
build.zip.bundle.dir=${build.zip.dir}/bundle
build.lib.dir=${build.zip.dir}/lib
build.bundle.dir=${build.zip.dir}/bundle
build.bundle.src.dir=${build.zip.dir}/src
build.doc.dir=${build.zip.dir}/doc
build.doc.api.dir=${build.doc.dir}/api
build.generated.dir=${build.spool.dir}/generated
build.manifest.dir=${build.spool.dir}/manifest

build.main.classes.dir=${build.spool.dir}/jar
build.main.run.dir=${build.project.dir}/run
build.main.resource.dir=${build.run.dir}

build.test.dir=${build.spool.dir}/test
build.test.classes.dir=${build.test.dir}/classes
build.test.output.dir=${build.test.dir}/output
build.test.run.dir=${build.test.dir}/run
build.test.resource.dir=${build.test.run.dir}
build.test.checkstyle.dir=${build.test.resource.dir}/checkstyle

build.jar.name=${project.name}.jar
build.jar.file=${build.zip.dir}/${build.jar.name}
build.src.jar.name=${project.name}-src.jar
build.src.jar.file=${build.zip.dir}/${build.src.jar.name}
build.war.file=${build.dist.dir}/${project.name}.war
build.zip.file=${build.dist.dir}/${project.name}.zip
build.mock.path=com/eriklievaart/${project.name}/mock
build.mock.include=${build.mock.path}/**
build.mock.name=${project.name}-mock.jar
build.mock.jar=${build.bundle.dir}/${build.mock.name}
build.mock.src.name=${project.name}-mock-src.jar
build.mock.src.jar=${build.bundle.dir}/${build.mock.src.name}

# project structure
project.lib.dir=${project.dir}/lib

project.lib.run.dir=${project.lib.dir}/run
project.lib.compile.dir=${project.lib.dir}/compile
project.lib.bundle.dir=${project.lib.dir}/bundle
project.lib.provided.dir=${project.lib.dir}/provided
project.lib.test.dir=${project.lib.dir}/test

project.lib.javacc.jar.file=${project.lib.compile.dir}/javacc.jar


# backup
backup.project.dir=${backup.dir}/${project.name}


# deploy
deploy.local.project.dir=${deploy.local.root.dir}/${project.name}
deploy.local.lib.dir=${deploy.local.project.dir}/lib
deploy.local.bundle.dir=${deploy.local.project.dir}/bundle

# tools
tool.checkstyle.version=8.11
tool.checkstyle.url=https://github.com/checkstyle/checkstyle/releases/download/checkstyle-${tool.checkstyle.version}/checkstyle-${tool.checkstyle.version}-all.jar
tool.checkstyle.dir=${user.home}/.cache/checkstyle/
tool.checkstyle.jar=${tool.checkstyle.dir}/checkstyle-${tool.checkstyle.version}.jar
tool.checkstyle.config.file=checkstyle/checkstyle.xml
tool.osgi.dir=${user.home}/Applications/felix-launcher
tool.ws.dir=${user.home}/.cache/ws
tool.ws.jar=${tool.ws.dir}/ws.jar
tool.ws.url=http://eriklievaart.com/download?file=ws


# servers
osgi.bin=${server.dir}/felix/bin
osgi.jar=${osgi.bin}/felix.jar
osgi.tmp.dir=/tmp/osgi/felix
osgi.tmp.bundle.dir=${osgi.tmp.dir}/bundle
osgi.pid=${osgi.tmp.dir}/pid

webserver.dir=${server.dir}/tomcat/current
webserver.bin.dir=${webserver.dir}/bin
webserver.webapp.dir=${webserver.dir}/webapps
webserver.port=8080


